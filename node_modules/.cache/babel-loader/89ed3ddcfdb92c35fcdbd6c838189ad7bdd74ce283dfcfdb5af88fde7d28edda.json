{"ast":null,"code":"var _jsxFileName = \"/Users/mgodoy/Desktop/FY/buscamina/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './css/stylo.css';\n//import BuscaMina from './components/BuscaMina';\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buscaminas = {\n  numMinasTotales: 30,\n  numMinasEncontradas: 0,\n  numFilas: 15,\n  numColumnas: 15,\n  aCampoMinas: []\n};\nexport function pintarTablero() {\n  //seleccionamos el objeto tablero\n  let tablero = document.querySelector(\"#tablero\");\n  //actualizamos las variables CSS con las variables JavaScript\n  document.querySelector(\"html\").style.setProperty(\"--num-filas\", buscaminas.numFilas);\n  document.querySelector(\"html\").style.setProperty(\"--num-columnas\", buscaminas.numColumnas);\n\n  //borramos el tablero actual\n  while (tablero.firstChild) {\n    tablero.firstChild.removeEventListener(\"contextmenu\", marcar);\n    tablero.firstChild.removeEventListener(\"click\", destapar);\n    tablero.removeChild(tablero.firstChild);\n  }\n\n  //creamos las casillas que necesitemos\n  for (let f = 0; f < buscaminas.numFilas; f++) {\n    for (let c = 0; c < buscaminas.numColumnas; c++) {\n      let newDiv = document.createElement(\"div\");\n      newDiv.setAttribute(\"id\", \"f\" + f + \"_c\" + c);\n      newDiv.dataset.fila = f;\n      newDiv.dataset.columna = c;\n      newDiv.addEventListener(\"contextmenu\", marcar); //evento con el botón derecho del raton\n      newDiv.addEventListener(\"click\", destapar); //evento con el botón izquierdo del raton\n\n      tablero.appendChild(newDiv);\n    }\n  }\n}\nfunction generarCampoMinasVacio() {\n  //generamos el campo de minas\n  buscaminas.aCampoMinas = new Array(buscaminas.numFilas);\n  for (let fila = 0; fila < buscaminas.numFilas; fila++) {\n    buscaminas.aCampoMinas[fila] = new Array(buscaminas.numColumnas);\n  }\n}\nfunction esparcirMinas() {\n  //repartimos de forma aleatoria las minas\n  let numMinasEsparcidas = 0;\n  while (numMinasEsparcidas < buscaminas.numMinasTotales) {\n    //numero aleatorio en el intervalo [0,numFilas-1]\n    let fila = Math.floor(Math.random() * buscaminas.numFilas);\n\n    //numero aleatorio en el intervalo [0,numColumnas-1]\n    let columna = Math.floor(Math.random() * buscaminas.numColumnas);\n\n    //si no hay bomba en esa posicion\n    if (buscaminas.aCampoMinas[fila][columna] != \"B\") {\n      //la ponemos\n      buscaminas.aCampoMinas[fila][columna] = \"B\";\n\n      //y sumamos 1 a las bombas esparcidas\n      numMinasEsparcidas++;\n    }\n  }\n}\nfunction contarMinasAlrededorCasilla(fila, columna) {\n  let numeroMinasAlrededor = 0;\n\n  //de la fila anterior a la posterior\n  for (let zFila = fila - 1; zFila <= fila + 1; zFila++) {\n    //de la columna anterior a la posterior\n    for (let zColumna = columna - 1; zColumna <= columna + 1; zColumna++) {\n      //si la casilla cae dentro del tablero\n      if (zFila > -1 && zFila < buscaminas.numFilas && zColumna > -1 && zColumna < buscaminas.numColumnas) {\n        //miramos si en esa posición hay bomba\n        if (buscaminas.aCampoMinas[zFila][zColumna] == \"B\") {\n          //y sumamos 1 al numero de minas que hay alrededor de esa casilla\n          numeroMinasAlrededor++;\n        }\n      }\n    }\n  }\n\n  //y guardamos cuantas minas hay en esa posicion\n  buscaminas.aCampoMinas[fila][columna] = numeroMinasAlrededor;\n}\nfunction contarMinas() {\n  //contamos cuantas minas hay alrededor de cada casilla\n  for (let fila = 0; fila < buscaminas.numFilas; fila++) {\n    for (let columna = 0; columna < buscaminas.numColumnas; columna++) {\n      //solo contamos si es distinto de bomba\n      if (buscaminas.aCampoMinas[fila][columna] != \"B\") {\n        contarMinasAlrededorCasilla(fila, columna);\n      }\n    }\n  }\n}\nfunction marcar(miEvento) {\n  if (miEvento.type === \"contextmenu\") {\n    console.log(miEvento);\n\n    //obtenemos el elemento que ha disparado el evento\n    let casilla = miEvento.currentTarget;\n\n    //detenemos el burbujeo del evento y su accion por defecto\n    miEvento.stopPropagation();\n    miEvento.preventDefault();\n\n    //obtenemos la fila de las propiedades dataset.\n    //como es un string hay que convertirlo a numero\n    let fila = parseInt(casilla.dataset.fila, 10);\n    let columna = parseInt(casilla.dataset.columna, 10);\n    if (fila >= 0 && columna >= 0 && fila < buscaminas.numFilas && columna < buscaminas.numColumnas) {\n      //si esta marcada como \"bandera\"\n      if (casilla.classList.contains(\"icon-bandera\")) {\n        //la quitamos\n        casilla.classList.remove(\"icon-bandera\");\n        //y la marcamos como duda\n        casilla.classList.add(\"icon-duda\");\n        //y al numero de minas encontradas le restamos 1\n        buscaminas.numMinasEncontradas--;\n      } else if (casilla.classList.contains(\"icon-duda\")) {\n        //si estaba marcada como duda lo quitamos\n        casilla.classList.remove(\"icon-duda\");\n      } else if (casilla.classList.length == 0) {\n        //si no está marcada la marcamos como \"bandera\"\n        casilla.classList.add(\"icon-bandera\");\n        //y sumamos 1 al numero de minas encontradas\n        buscaminas.numMinasEncontradas++;\n        //si es igual al numero de minas totales resolvemos el tablero para ver si esta bien\n        if (buscaminas.numMinasEncontradas == buscaminas.numMinasTotales) {\n          resolverTablero(true);\n        }\n      }\n      actualizarcantMnas();\n    }\n  }\n}\nfunction destapar(miEvento) {\n  if (miEvento.type === \"click\") {\n    let casilla = miEvento.currentTarget;\n    let fila = parseInt(casilla.dataset.fila, 10);\n    let columna = parseInt(casilla.dataset.columna, 10);\n    destaparCasilla(fila, columna);\n  }\n}\nfunction destaparCasilla(fila, columna) {\n  //si la casilla esta dentro del tablero\n  if (fila > -1 && fila < buscaminas.numFilas && columna > -1 && columna < buscaminas.numColumnas) {\n    //console.log(\"destapamos la casilla con fila \" + fila + \" y columna \" +columna );\n\n    //obtenermos la casilla con la fila y columna\n    let casilla = document.querySelector(\"#f\" + fila + \"_c\" + columna);\n\n    //si la casilla no esta destapada\n    if (!casilla.classList.contains(\"destapado\")) {\n      //si no esta marcada como \"bandera\"\n      if (!casilla.classList.contains(\"icon-bandera\")) {\n        //la destapamos\n        casilla.classList.add(\"destapado\");\n\n        //ponemos en la casilla el número de minas que tiene alrededor\n        casilla.innerHTML = buscaminas.aCampoMinas[fila][columna];\n\n        //ponemos el estilo del numero de minas que tiene alrededor (cada uno es de un color)\n        casilla.classList.add(\"c\" + buscaminas.aCampoMinas[fila][columna]);\n\n        //si no es bomba\n        if (buscaminas.aCampoMinas[fila][columna] !== \"B\") {\n          // y tiene 0 minas alrededor, destapamos las casillas contiguas\n          if (buscaminas.aCampoMinas[fila][columna] == 0) {\n            destaparCasilla(fila - 1, columna - 1);\n            destaparCasilla(fila - 1, columna);\n            destaparCasilla(fila - 1, columna + 1);\n            destaparCasilla(fila, columna - 1);\n            destaparCasilla(fila, columna + 1);\n            destaparCasilla(fila + 1, columna - 1);\n            destaparCasilla(fila + 1, columna);\n            destaparCasilla(fila + 1, columna + 1);\n\n            //y borramos el 0 poniendo la cadena vacía\n            casilla.innerHTML = \"\";\n          }\n        } else if (buscaminas.aCampoMinas[fila][columna] == \"B\") {\n          // si por el contrario hay bomba quitamos la B\n          casilla.innerHTML = \"\";\n\n          //añadimos el estilo de que hay bomba\n          casilla.classList.add(\"icon-bomba\");\n\n          // y que se nos ha olvidado marcarla\n          casilla.classList.add(\"sinmarcar\");\n\n          // y resolvemos el tablero indicando (false), que hemos cometido un fallo\n          resolverTablero(false);\n        }\n      }\n    }\n  }\n}\nfunction resolverTablero(isOK) {\n  let tablero = document.querySelector(\"#tablero\");\n  let aCasillas = tablero.children;\n  for (let i = 0; i < aCasillas.length; i++) {\n    //quitamos los listeners de los eventos a las casillas\n    aCasillas[i].removeEventListener(\"click\", destapar);\n    aCasillas[i].removeEventListener(\"contextmenu\", marcar);\n    let fila = parseInt(aCasillas[i].dataset.fila, 10);\n    let columna = parseInt(aCasillas[i].dataset.columna, 10);\n    if (aCasillas[i].classList.contains(\"icon-bandera\")) {\n      if (buscaminas.aCampoMinas[fila][columna] == \"B\") {\n        //bandera correcta\n        aCasillas[i].classList.add(\"destapado\");\n        aCasillas[i].classList.remove(\"icon-bandera\");\n        aCasillas[i].classList.add(\"icon-bomba\");\n      } else {\n        //bandera erronea\n        aCasillas[i].classList.add(\"destapado\");\n        aCasillas[i].classList.add(\"banderaErronea\");\n        isOK = false;\n      }\n    } else if (!aCasillas[i].classList.contains(\"destapado\")) {\n      if (buscaminas.aCampoMinas[fila][columna] == \"B\") {\n        //destapamos el resto de las bombas\n        aCasillas[i].classList.add(\"destapado\");\n        aCasillas[i].classList.add(\"icon-bomba\");\n      }\n    }\n  }\n  if (isOK) {\n    alert(\"Ganador!!\");\n  }\n}\nfunction actualizarcantMnas() {\n  document.querySelector(\"#cantMnas\").innerHTML = buscaminas.numMinasTotales - buscaminas.numMinasEncontradas;\n}\nfunction App() {\n  _s();\n  const tablero = useRef(null);\n  useEffect(() => {\n    buscaminas.numFilas = 10;\n    buscaminas.numColumnas = 10;\n    buscaminas.numMinasTotales = 10;\n    const tablero = document.querySelector('#tablero');\n    pintarTablero();\n    generarCampoMinasVacio();\n    esparcirMinas();\n    contarMinas();\n    actualizarcantMnas();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tablero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"estado\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Cantidad de Minas:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"cantMnas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PrswfjiNVwGYYDc0mDN7WoRDxnk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","buscaminas","numMinasTotales","numMinasEncontradas","numFilas","numColumnas","aCampoMinas","pintarTablero","tablero","document","querySelector","style","setProperty","firstChild","removeEventListener","marcar","destapar","removeChild","f","c","newDiv","createElement","setAttribute","dataset","fila","columna","addEventListener","appendChild","generarCampoMinasVacio","Array","esparcirMinas","numMinasEsparcidas","Math","floor","random","contarMinasAlrededorCasilla","numeroMinasAlrededor","zFila","zColumna","contarMinas","miEvento","type","console","log","casilla","currentTarget","stopPropagation","preventDefault","parseInt","classList","contains","remove","add","length","resolverTablero","actualizarcantMnas","destaparCasilla","innerHTML","isOK","aCasillas","children","i","alert","App","_s","className","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mgodoy/Desktop/FY/buscamina/src/App.js"],"sourcesContent":["import React from 'react';\nimport './css/stylo.css';\n//import BuscaMina from './components/BuscaMina';\nimport { useRef, useEffect } from \"react\";\nconst buscaminas = {\n  numMinasTotales: 30,\n  numMinasEncontradas: 0,\n  numFilas: 15,\n  numColumnas: 15,\n  aCampoMinas: []\n}\n\nexport function pintarTablero(){\n  //seleccionamos el objeto tablero\n  let tablero = document.querySelector(\"#tablero\");\n  //actualizamos las variables CSS con las variables JavaScript\n  document.querySelector(\"html\").style.setProperty(\"--num-filas\",buscaminas.numFilas);\n  document.querySelector(\"html\").style.setProperty(\"--num-columnas\",buscaminas.numColumnas);\n\n  //borramos el tablero actual\n  while (tablero.firstChild) {\n      tablero.firstChild.removeEventListener(\"contextmenu\",marcar);\n      tablero.firstChild.removeEventListener(\"click\",destapar);\n      tablero.removeChild(tablero.firstChild);\n  }\n\n  //creamos las casillas que necesitemos\n  for(let f=0; f<buscaminas.numFilas; f++){\n      for(let c=0; c<buscaminas.numColumnas; c++){\n          let newDiv = document.createElement(\"div\");\n          newDiv.setAttribute(\"id\",\"f\" + f + \"_c\" + c );\n          newDiv.dataset.fila = f;\n          newDiv.dataset.columna = c;\n          newDiv.addEventListener(\"contextmenu\",marcar); //evento con el botón derecho del raton\n          newDiv.addEventListener(\"click\",destapar); //evento con el botón izquierdo del raton\n\n          tablero.appendChild(newDiv);\n      }\n  }\n}\n\nfunction generarCampoMinasVacio(){\n  //generamos el campo de minas\n  buscaminas.aCampoMinas = new Array(buscaminas.numFilas);\n  for (let fila=0; fila<buscaminas.numFilas; fila++){\n      buscaminas.aCampoMinas[fila] = new Array(buscaminas.numColumnas);\n  }\n}\n\nfunction esparcirMinas(){\n  //repartimos de forma aleatoria las minas\n  let numMinasEsparcidas = 0;\n\n  while (numMinasEsparcidas<buscaminas.numMinasTotales){\n      //numero aleatorio en el intervalo [0,numFilas-1]\n      let fila    = Math.floor(Math.random() * buscaminas.numFilas);\n\n      //numero aleatorio en el intervalo [0,numColumnas-1]\n      let columna = Math.floor(Math.random() * buscaminas.numColumnas);\n\n      //si no hay bomba en esa posicion\n      if (buscaminas.aCampoMinas[fila][columna] != \"B\"){\n          //la ponemos\n          buscaminas.aCampoMinas[fila][columna] = \"B\";\n\n          //y sumamos 1 a las bombas esparcidas\n          numMinasEsparcidas++;\n      }\n  }\n}\n\n\nfunction contarMinasAlrededorCasilla(fila,columna){\n  let numeroMinasAlrededor = 0;\n\n  //de la fila anterior a la posterior\n  for (let zFila = fila-1; zFila <= fila+1; zFila++){\n\n      //de la columna anterior a la posterior\n      for (let zColumna = columna-1; zColumna <= columna+1; zColumna++){\n\n          //si la casilla cae dentro del tablero\n          if (zFila>-1 && zFila<buscaminas.numFilas && zColumna>-1 && zColumna<buscaminas.numColumnas){\n\n              //miramos si en esa posición hay bomba\n              if (buscaminas.aCampoMinas[zFila][zColumna]==\"B\"){\n\n                  //y sumamos 1 al numero de minas que hay alrededor de esa casilla\n                  numeroMinasAlrededor++;\n              }\n          }\n      }\n  }\n\n  //y guardamos cuantas minas hay en esa posicion\n  buscaminas.aCampoMinas[fila][columna] = numeroMinasAlrededor;\n}\n\n\n\nfunction contarMinas(){\n  //contamos cuantas minas hay alrededor de cada casilla\n  for (let fila=0; fila<buscaminas.numFilas; fila++){\n      for (let columna=0; columna<buscaminas.numColumnas; columna++){\n          //solo contamos si es distinto de bomba\n          if (buscaminas.aCampoMinas[fila][columna]!=\"B\"){\n              contarMinasAlrededorCasilla(fila,columna);\n          }\n      }\n  }\n}\n\n\n\nfunction marcar(miEvento){\n  if (miEvento.type === \"contextmenu\"){\n      console.log(miEvento);\n\n      //obtenemos el elemento que ha disparado el evento\n      let casilla = miEvento.currentTarget;\n\n      //detenemos el burbujeo del evento y su accion por defecto\n      miEvento.stopPropagation();\n      miEvento.preventDefault();\n\n      //obtenemos la fila de las propiedades dataset.\n      //como es un string hay que convertirlo a numero\n      let fila = parseInt(casilla.dataset.fila,10);\n      let columna = parseInt(casilla.dataset.columna,10);\n\n      if (fila>=0 && columna>=0 && fila< buscaminas.numFilas && columna < buscaminas.numColumnas) {\n          //si esta marcada como \"bandera\"\n          if (casilla.classList.contains(\"icon-bandera\")){\n              //la quitamos\n              casilla.classList.remove(\"icon-bandera\");\n              //y la marcamos como duda\n              casilla.classList.add(\"icon-duda\");\n              //y al numero de minas encontradas le restamos 1\n              buscaminas.numMinasEncontradas--;\n          } else if (casilla.classList.contains(\"icon-duda\")){\n              //si estaba marcada como duda lo quitamos\n              casilla.classList.remove(\"icon-duda\");\n          } else if (casilla.classList.length == 0){\n              //si no está marcada la marcamos como \"bandera\"\n              casilla.classList.add(\"icon-bandera\");\n              //y sumamos 1 al numero de minas encontradas\n              buscaminas.numMinasEncontradas++;\n              //si es igual al numero de minas totales resolvemos el tablero para ver si esta bien\n              if (buscaminas.numMinasEncontradas == buscaminas.numMinasTotales){\n                  resolverTablero(true);\n              }\n          }\n\n          actualizarcantMnas();\n      }\n\n  }\n}\n\nfunction destapar(miEvento){\n  if (miEvento.type === \"click\"){\n      let casilla = miEvento.currentTarget;\n      let fila = parseInt(casilla.dataset.fila,10);\n      let columna = parseInt(casilla.dataset.columna,10);\n\n      destaparCasilla(fila,columna);\n  }\n}\n\nfunction destaparCasilla(fila, columna){\n\n  //si la casilla esta dentro del tablero\n  if (fila > -1 && fila < buscaminas.numFilas &&\n      columna >-1 && columna < buscaminas.numColumnas){\n\n      //console.log(\"destapamos la casilla con fila \" + fila + \" y columna \" +columna );\n\n      //obtenermos la casilla con la fila y columna\n      let casilla = document.querySelector(\"#f\" + fila + \"_c\" + columna);\n\n      //si la casilla no esta destapada\n      if (!casilla.classList.contains(\"destapado\")){\n\n          //si no esta marcada como \"bandera\"\n          if (!casilla.classList.contains(\"icon-bandera\")){\n\n              //la destapamos\n              casilla.classList.add(\"destapado\");\n\n              //ponemos en la casilla el número de minas que tiene alrededor\n              casilla.innerHTML = buscaminas.aCampoMinas[fila][columna];\n\n              //ponemos el estilo del numero de minas que tiene alrededor (cada uno es de un color)\n              casilla.classList.add(\"c\" + buscaminas.aCampoMinas[fila][columna])\n\n              //si no es bomba\n              if (buscaminas.aCampoMinas[fila][columna] !==\"B\"){\n\n                  // y tiene 0 minas alrededor, destapamos las casillas contiguas\n                  if (buscaminas.aCampoMinas[fila][columna] == 0){\n                      destaparCasilla(fila-1,columna-1);\n                      destaparCasilla(fila-1,columna);\n                      destaparCasilla(fila-1,columna+1);\n                      destaparCasilla(fila,columna-1);\n                      destaparCasilla(fila,columna+1);\n                      destaparCasilla(fila+1,columna-1);\n                      destaparCasilla(fila+1,columna);\n                      destaparCasilla(fila+1,columna+1);\n\n                      //y borramos el 0 poniendo la cadena vacía\n                      casilla.innerHTML  = \"\";\n                  }\n              }else if (buscaminas.aCampoMinas[fila][columna]==\"B\"){\n                  // si por el contrario hay bomba quitamos la B\n                  casilla.innerHTML = \"\";\n\n                  //añadimos el estilo de que hay bomba\n                  casilla.classList.add(\"icon-bomba\");\n\n                  // y que se nos ha olvidado marcarla\n                  casilla.classList.add(\"sinmarcar\");\n\n                  // y resolvemos el tablero indicando (false), que hemos cometido un fallo\n                  resolverTablero(false);\n              }\n          }\n      }\n  }\n}\n\nfunction resolverTablero(isOK){\n  let tablero = document.querySelector(\"#tablero\");\n  let aCasillas = tablero.children;\n  for (let i = 0 ; i < aCasillas.length; i++){\n      //quitamos los listeners de los eventos a las casillas\n      aCasillas[i].removeEventListener(\"click\", destapar);\n      aCasillas[i].removeEventListener(\"contextmenu\", marcar);\n\n      let fila = parseInt(aCasillas[i].dataset.fila,10);\n      let columna = parseInt(aCasillas[i].dataset.columna,10);\n\n      if (aCasillas[i].classList.contains(\"icon-bandera\")){\n          if (buscaminas.aCampoMinas[fila][columna] == \"B\"){\n              //bandera correcta\n              aCasillas[i].classList.add(\"destapado\");\n              aCasillas[i].classList.remove(\"icon-bandera\");\n              aCasillas[i].classList.add(\"icon-bomba\");\n          } else {\n              //bandera erronea\n              aCasillas[i].classList.add(\"destapado\");\n              aCasillas[i].classList.add(\"banderaErronea\");\n              isOK = false;\n          }\n      } else if (!aCasillas[i].classList.contains(\"destapado\")){\n          if (buscaminas.aCampoMinas[fila][columna] == \"B\"){\n              //destapamos el resto de las bombas\n              aCasillas[i].classList.add(\"destapado\");\n              aCasillas[i].classList.add(\"icon-bomba\");\n          }\n      }\n\n  }\n\n  if (isOK){\n      alert(\"Ganador!!\");\n  }\n}\n\n\nfunction actualizarcantMnas(){\n  document.querySelector(\"#cantMnas\").innerHTML =\n      (buscaminas.numMinasTotales - buscaminas.numMinasEncontradas);\n}\n\nfunction App() {\n  const tablero = useRef(null);\n  useEffect(() => {\n    buscaminas.numFilas = 10;\n    buscaminas.numColumnas = 10;\n    buscaminas.numMinasTotales = 10;\n    const tablero = document.querySelector('#tablero');\n    pintarTablero();\n    generarCampoMinasVacio();\n    esparcirMinas();\n    contarMinas();\n    actualizarcantMnas();\n  }); \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"tablero\"></div> \n      \t<div id=\"estado\">\n          <div>\n            Cantidad de Minas: \n            <span id=\"cantMnas\"></span>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}