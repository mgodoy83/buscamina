{"ast":null,"code":"var _jsxFileName = \"/Users/mgodoy/Desktop/FY/buscamina/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './css/stylo.css';\n//import BuscaMina from './components/BuscaMina';\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst buscaminas = {\n  numMinasTotales: 30,\n  numMinasEncontradas: 0,\n  numFilas: 15,\n  numColumnas: 15,\n  aCampoMinas: []\n};\nfunction pintarTablero() {\n  //seleccionamos el objeto tablero\n  let tablero = document.querySelector(\"#tablero\");\n  //actualizamos las variables CSS con las variables JavaScript\n  document.querySelector(\"html\").style.setProperty(\"--num-filas\", buscaminas.numFilas);\n  document.querySelector(\"html\").style.setProperty(\"--num-columnas\", buscaminas.numColumnas);\n  //borramos el tablero actual\n  while (tablero.firstChild) {\n    tablero.firstChild.removeEventListener(\"contextmenu\", marcar);\n    tablero.firstChild.removeEventListener(\"click\", destapar);\n    tablero.removeChild(tablero.firstChild);\n  }\n  //creamos las casillas que necesitemos\n  for (let f = 0; f < buscaminas.numFilas; f++) {\n    for (let c = 0; c < buscaminas.numColumnas; c++) {\n      let newDiv = document.createElement(\"div\");\n      newDiv.setAttribute(\"id\", \"f\" + f + \"_c\" + c);\n      newDiv.dataset.fila = f;\n      newDiv.dataset.columna = c;\n      newDiv.addEventListener(\"contextmenu\", marcar); //evento con el botón derecho del raton\n      newDiv.addEventListener(\"click\", destapar); //evento con el botón izquierdo del raton\n      tablero.appendChild(newDiv);\n    }\n  }\n}\nfunction marcar(miEvento) {\n  if (miEvento.type === \"contextmenu\") {\n    console.log(miEvento);\n\n    //obtenemos el elemento que ha disparado el evento\n    let casilla = miEvento.currentTarget;\n\n    //detenemos el burbujeo del evento y su accion por defecto\n    miEvento.stopPropagation();\n    miEvento.preventDefault();\n\n    //obtenemos la fila de las propiedades dataset.\n    //como es un string hay que convertirlo a numero\n    let fila = parseInt(casilla.dataset.fila, 10);\n    let columna = parseInt(casilla.dataset.columna, 10);\n    if (fila >= 0 && columna >= 0 && fila < buscaminas.numFilas && columna < buscaminas.numColumnas) {\n      //si esta marcada como \"bandera\"\n      if (casilla.classList.contains(\"icon-bandera\")) {\n        //la quitamos\n        casilla.classList.remove(\"icon-bandera\");\n        //y la marcamos como duda\n        casilla.classList.add(\"icon-duda\");\n        //y al numero de minas encontradas le restamos 1\n        buscaminas.numMinasEncontradas--;\n      } else if (casilla.classList.contains(\"icon-duda\")) {\n        //si estaba marcada como duda lo quitamos\n        casilla.classList.remove(\"icon-duda\");\n      } else if (casilla.classList.length == 0) {\n        //si no está marcada la marcamos como \"bandera\"\n        casilla.classList.add(\"icon-bandera\");\n        //y sumamos 1 al numero de minas encontradas\n        buscaminas.numMinasEncontradas++;\n        //si es igual al numero de minas totales resolvemos el tablero para ver si esta bien\n        if (buscaminas.numMinasEncontradas == buscaminas.numMinasTotales) {\n          resolverTablero(true);\n        }\n      }\n      actualizarcantMnas();\n    }\n  }\n}\nresolverTablero;\nfunction destapar(miEvento) {\n  if (miEvento.type === \"click\") {\n    let casilla = miEvento.currentTarget;\n    let fila = parseInt(casilla.dataset.fila, 10);\n    let columna = parseInt(casilla.dataset.columna, 10);\n    destaparCasilla(fila, columna);\n  }\n}\nfunction App() {\n  _s();\n  useEffect(() => {\n    console.log(`lalalala`);\n    buscaminas.numFilas = 10;\n    buscaminas.numColumnas = 10;\n    buscaminas.numMinasTotales = 10;\n    pintarTablero();\n    generarCampoMinasVacio();\n    esparcirMinas();\n    contarMinas();\n    actualizarcantMnas();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tablero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"estado\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Cantidad de Minas:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"cantMnas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","buscaminas","numMinasTotales","numMinasEncontradas","numFilas","numColumnas","aCampoMinas","pintarTablero","tablero","document","querySelector","style","setProperty","firstChild","removeEventListener","marcar","destapar","removeChild","f","c","newDiv","createElement","setAttribute","dataset","fila","columna","addEventListener","appendChild","miEvento","type","console","log","casilla","currentTarget","stopPropagation","preventDefault","parseInt","classList","contains","remove","add","length","resolverTablero","actualizarcantMnas","destaparCasilla","App","_s","generarCampoMinasVacio","esparcirMinas","contarMinas","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mgodoy/Desktop/FY/buscamina/src/App.js"],"sourcesContent":["import React from 'react';\nimport './css/stylo.css';\n//import BuscaMina from './components/BuscaMina';\nimport { useRef, useEffect } from \"react\";\nconst buscaminas = {\n  numMinasTotales: 30,\n  numMinasEncontradas: 0,\n  numFilas: 15,\n  numColumnas: 15,\n  aCampoMinas: []\n}\n\nfunction pintarTablero(){\n  //seleccionamos el objeto tablero\n  let tablero = document.querySelector(\"#tablero\");\n  //actualizamos las variables CSS con las variables JavaScript\n  document.querySelector(\"html\").style.setProperty(\"--num-filas\",buscaminas.numFilas);\n  document.querySelector(\"html\").style.setProperty(\"--num-columnas\",buscaminas.numColumnas);\n  //borramos el tablero actual\n  while (tablero.firstChild) {\n      tablero.firstChild.removeEventListener(\"contextmenu\",marcar);\n      tablero.firstChild.removeEventListener(\"click\",destapar);\n      tablero.removeChild(tablero.firstChild);\n  }\n  //creamos las casillas que necesitemos\n  for(let f=0; f<buscaminas.numFilas; f++){\n      for(let c=0; c<buscaminas.numColumnas; c++){\n          let newDiv = document.createElement(\"div\");\n          newDiv.setAttribute(\"id\",\"f\" + f + \"_c\" + c );\n          newDiv.dataset.fila = f;\n          newDiv.dataset.columna = c;\n          newDiv.addEventListener(\"contextmenu\",marcar); //evento con el botón derecho del raton\n          newDiv.addEventListener(\"click\",destapar); //evento con el botón izquierdo del raton\n          tablero.appendChild(newDiv);\n      }\n  }\n}\n\nfunction marcar(miEvento){\n  if (miEvento.type === \"contextmenu\"){\n      console.log(miEvento);\n\n      //obtenemos el elemento que ha disparado el evento\n      let casilla = miEvento.currentTarget;\n\n      //detenemos el burbujeo del evento y su accion por defecto\n      miEvento.stopPropagation();\n      miEvento.preventDefault();\n\n      //obtenemos la fila de las propiedades dataset.\n      //como es un string hay que convertirlo a numero\n      let fila = parseInt(casilla.dataset.fila,10);\n      let columna = parseInt(casilla.dataset.columna,10);\n\n      if (fila>=0 && columna>=0 && fila< buscaminas.numFilas && columna < buscaminas.numColumnas) {\n          //si esta marcada como \"bandera\"\n          if (casilla.classList.contains(\"icon-bandera\")){\n              //la quitamos\n              casilla.classList.remove(\"icon-bandera\");\n              //y la marcamos como duda\n              casilla.classList.add(\"icon-duda\");\n              //y al numero de minas encontradas le restamos 1\n              buscaminas.numMinasEncontradas--;\n          } else if (casilla.classList.contains(\"icon-duda\")){\n              //si estaba marcada como duda lo quitamos\n              casilla.classList.remove(\"icon-duda\");\n          } else if (casilla.classList.length == 0){\n              //si no está marcada la marcamos como \"bandera\"\n              casilla.classList.add(\"icon-bandera\");\n              //y sumamos 1 al numero de minas encontradas\n              buscaminas.numMinasEncontradas++;\n              //si es igual al numero de minas totales resolvemos el tablero para ver si esta bien\n              if (buscaminas.numMinasEncontradas == buscaminas.numMinasTotales){\n                  resolverTablero(true);\n              }\n          }\n\n          actualizarcantMnas();\n      }\n\n  }\n}\n\nresolverTablero\n\nfunction destapar(miEvento){\n  if (miEvento.type === \"click\"){\n      let casilla = miEvento.currentTarget;\n      let fila = parseInt(casilla.dataset.fila,10);\n      let columna = parseInt(casilla.dataset.columna,10);\n\n      destaparCasilla(fila,columna);\n  }\n}\n\nfunction App() {\n\n  useEffect(() => {\n    console.log(`lalalala`);\n    buscaminas.numFilas = 10;\n    buscaminas.numColumnas = 10;\n    buscaminas.numMinasTotales = 10;\n    pintarTablero();\n    generarCampoMinasVacio();\n    esparcirMinas();\n    contarMinas();\n    actualizarcantMnas();\n  }); \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"tablero\"></div> \n      \t<div id=\"estado\">\n          <div>\n            Cantidad de Minas: \n            <span id=\"cantMnas\"></span>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB;AACA,SAASC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,MAAMC,UAAU,GAAG;EACjBC,eAAe,EAAE,EAAE;EACnBC,mBAAmB,EAAE,CAAC;EACtBC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE;AACf,CAAC;AAED,SAASC,aAAaA,CAAA,EAAE;EACtB;EACA,IAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;EAChD;EACAD,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACC,KAAK,CAACC,WAAW,CAAC,aAAa,EAACX,UAAU,CAACG,QAAQ,CAAC;EACnFK,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC,CAACC,KAAK,CAACC,WAAW,CAAC,gBAAgB,EAACX,UAAU,CAACI,WAAW,CAAC;EACzF;EACA,OAAOG,OAAO,CAACK,UAAU,EAAE;IACvBL,OAAO,CAACK,UAAU,CAACC,mBAAmB,CAAC,aAAa,EAACC,MAAM,CAAC;IAC5DP,OAAO,CAACK,UAAU,CAACC,mBAAmB,CAAC,OAAO,EAACE,QAAQ,CAAC;IACxDR,OAAO,CAACS,WAAW,CAACT,OAAO,CAACK,UAAU,CAAC;EAC3C;EACA;EACA,KAAI,IAAIK,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACjB,UAAU,CAACG,QAAQ,EAAEc,CAAC,EAAE,EAAC;IACpC,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAClB,UAAU,CAACI,WAAW,EAAEc,CAAC,EAAE,EAAC;MACvC,IAAIC,MAAM,GAAGX,QAAQ,CAACY,aAAa,CAAC,KAAK,CAAC;MAC1CD,MAAM,CAACE,YAAY,CAAC,IAAI,EAAC,GAAG,GAAGJ,CAAC,GAAG,IAAI,GAAGC,CAAE,CAAC;MAC7CC,MAAM,CAACG,OAAO,CAACC,IAAI,GAAGN,CAAC;MACvBE,MAAM,CAACG,OAAO,CAACE,OAAO,GAAGN,CAAC;MAC1BC,MAAM,CAACM,gBAAgB,CAAC,aAAa,EAACX,MAAM,CAAC,CAAC,CAAC;MAC/CK,MAAM,CAACM,gBAAgB,CAAC,OAAO,EAACV,QAAQ,CAAC,CAAC,CAAC;MAC3CR,OAAO,CAACmB,WAAW,CAACP,MAAM,CAAC;IAC/B;EACJ;AACF;AAEA,SAASL,MAAMA,CAACa,QAAQ,EAAC;EACvB,IAAIA,QAAQ,CAACC,IAAI,KAAK,aAAa,EAAC;IAChCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;;IAErB;IACA,IAAII,OAAO,GAAGJ,QAAQ,CAACK,aAAa;;IAEpC;IACAL,QAAQ,CAACM,eAAe,CAAC,CAAC;IAC1BN,QAAQ,CAACO,cAAc,CAAC,CAAC;;IAEzB;IACA;IACA,IAAIX,IAAI,GAAGY,QAAQ,CAACJ,OAAO,CAACT,OAAO,CAACC,IAAI,EAAC,EAAE,CAAC;IAC5C,IAAIC,OAAO,GAAGW,QAAQ,CAACJ,OAAO,CAACT,OAAO,CAACE,OAAO,EAAC,EAAE,CAAC;IAElD,IAAID,IAAI,IAAE,CAAC,IAAIC,OAAO,IAAE,CAAC,IAAID,IAAI,GAAEvB,UAAU,CAACG,QAAQ,IAAIqB,OAAO,GAAGxB,UAAU,CAACI,WAAW,EAAE;MACxF;MACA,IAAI2B,OAAO,CAACK,SAAS,CAACC,QAAQ,CAAC,cAAc,CAAC,EAAC;QAC3C;QACAN,OAAO,CAACK,SAAS,CAACE,MAAM,CAAC,cAAc,CAAC;QACxC;QACAP,OAAO,CAACK,SAAS,CAACG,GAAG,CAAC,WAAW,CAAC;QAClC;QACAvC,UAAU,CAACE,mBAAmB,EAAE;MACpC,CAAC,MAAM,IAAI6B,OAAO,CAACK,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAC;QAC/C;QACAN,OAAO,CAACK,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;MACzC,CAAC,MAAM,IAAIP,OAAO,CAACK,SAAS,CAACI,MAAM,IAAI,CAAC,EAAC;QACrC;QACAT,OAAO,CAACK,SAAS,CAACG,GAAG,CAAC,cAAc,CAAC;QACrC;QACAvC,UAAU,CAACE,mBAAmB,EAAE;QAChC;QACA,IAAIF,UAAU,CAACE,mBAAmB,IAAIF,UAAU,CAACC,eAAe,EAAC;UAC7DwC,eAAe,CAAC,IAAI,CAAC;QACzB;MACJ;MAEAC,kBAAkB,CAAC,CAAC;IACxB;EAEJ;AACF;AAEAD,eAAe;AAEf,SAAS1B,QAAQA,CAACY,QAAQ,EAAC;EACzB,IAAIA,QAAQ,CAACC,IAAI,KAAK,OAAO,EAAC;IAC1B,IAAIG,OAAO,GAAGJ,QAAQ,CAACK,aAAa;IACpC,IAAIT,IAAI,GAAGY,QAAQ,CAACJ,OAAO,CAACT,OAAO,CAACC,IAAI,EAAC,EAAE,CAAC;IAC5C,IAAIC,OAAO,GAAGW,QAAQ,CAACJ,OAAO,CAACT,OAAO,CAACE,OAAO,EAAC,EAAE,CAAC;IAElDmB,eAAe,CAACpB,IAAI,EAACC,OAAO,CAAC;EACjC;AACF;AAEA,SAASoB,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEbhD,SAAS,CAAC,MAAM;IACdgC,OAAO,CAACC,GAAG,CAAE,UAAS,CAAC;IACvB9B,UAAU,CAACG,QAAQ,GAAG,EAAE;IACxBH,UAAU,CAACI,WAAW,GAAG,EAAE;IAC3BJ,UAAU,CAACC,eAAe,GAAG,EAAE;IAC/BK,aAAa,CAAC,CAAC;IACfwC,sBAAsB,CAAC,CAAC;IACxBC,aAAa,CAAC,CAAC;IACfC,WAAW,CAAC,CAAC;IACbN,kBAAkB,CAAC,CAAC;EACtB,CAAC,CAAC;EAEF,oBACE3C,OAAA;IAAKkD,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBnD,OAAA;MAAQkD,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BnD,OAAA;QAAKoD,EAAE,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzBxD,OAAA;QAAKoD,EAAE,EAAC,QAAQ;QAAAD,QAAA,eACbnD,OAAA;UAAAmD,QAAA,GAAK,oBAEH,eAAAnD,OAAA;YAAMoD,EAAE,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACV,EAAA,CA3BQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}