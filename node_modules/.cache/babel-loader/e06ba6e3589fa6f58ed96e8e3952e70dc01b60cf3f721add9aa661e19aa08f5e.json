{"ast":null,"code":"var _jsxFileName = \"/Users/mgodoy/Desktop/FY/buscamina/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './css/stylo.css';\nimport BuscaMina from './components/BuscaMina';\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const buscaminas = {\n    numMinasTotales: 30,\n    numMinasEncontradas: 0,\n    numFilas: 15,\n    numColumnas: 15,\n    aCampoMinas: []\n  };\n  function pintarTablero() {\n    //seleccionamos el objeto tablero\n    let tablero = document.querySelector(\"#tablero\");\n    console.log(\"tablero :\" + tablero);\n    //actualizamos las variables CSS con las variables JavaScript\n    document.querySelector(\"html\").style.setProperty(\"--num-filas\", buscaminas.numFilas);\n    document.querySelector(\"html\").style.setProperty(\"--num-columnas\", buscaminas.numColumnas);\n\n    //borramos el tablero actual\n    while (tablero.firstChild) {\n      tablero.firstChild.removeEventListener(\"contextmenu\", marcar);\n      tablero.firstChild.removeEventListener(\"click\", destapar);\n      tablero.removeChild(tablero.firstChild);\n    }\n\n    //creamos las casillas que necesitemos\n    for (let f = 0; f < buscaminas.numFilas; f++) {\n      for (let c = 0; c < buscaminas.numColumnas; c++) {\n        let newDiv = document.createElement(\"div\");\n        newDiv.setAttribute(\"id\", \"f\" + f + \"_c\" + c);\n        newDiv.dataset.fila = f;\n        newDiv.dataset.columna = c;\n        newDiv.addEventListener(\"contextmenu\", marcar); //evento con el botón derecho del raton\n        newDiv.addEventListener(\"click\", destapar); //evento con el botón izquierdo del raton\n\n        tablero.appendChild(newDiv);\n      }\n    }\n  }\n  function generarCampoMinasVacio() {\n    //generamos el campo de minas\n    buscaminas.aCampoMinas = new Array(buscaminas.numFilas);\n    for (let fila = 0; fila < buscaminas.numFilas; fila++) {\n      buscaminas.aCampoMinas[fila] = new Array(buscaminas.numColumnas);\n    }\n  }\n  function esparcirMinas() {\n    //repartimos de forma aleatoria las minas\n    let numMinasEsparcidas = 0;\n    while (numMinasEsparcidas < buscaminas.numMinasTotales) {\n      //numero aleatorio en el intervalo [0,numFilas-1]\n      let fila = Math.floor(Math.random() * buscaminas.numFilas);\n\n      //numero aleatorio en el intervalo [0,numColumnas-1]\n      let columna = Math.floor(Math.random() * buscaminas.numColumnas);\n\n      //si no hay bomba en esa posicion\n      if (buscaminas.aCampoMinas[fila][columna] != \"B\") {\n        //la ponemos\n        buscaminas.aCampoMinas[fila][columna] = \"B\";\n\n        //y sumamos 1 a las bombas esparcidas\n        numMinasEsparcidas++;\n      }\n    }\n  }\n  function contarMinasAlrededorCasilla(fila, columna) {\n    let numeroMinasAlrededor = 0;\n\n    //de la fila anterior a la posterior\n    for (let zFila = fila - 1; zFila <= fila + 1; zFila++) {\n      //de la columna anterior a la posterior\n      for (let zColumna = columna - 1; zColumna <= columna + 1; zColumna++) {\n        //si la casilla cae dentro del tablero\n        if (zFila > -1 && zFila < buscaminas.numFilas && zColumna > -1 && zColumna < buscaminas.numColumnas) {\n          //miramos si en esa posición hay bomba\n          if (buscaminas.aCampoMinas[zFila][zColumna] == \"B\") {\n            //y sumamos 1 al numero de minas que hay alrededor de esa casilla\n            numeroMinasAlrededor++;\n          }\n        }\n      }\n    }\n\n    //y guardamos cuantas minas hay en esa posicion\n    buscaminas.aCampoMinas[fila][columna] = numeroMinasAlrededor;\n  }\n  function contarMinas() {\n    //contamos cuantas minas hay alrededor de cada casilla\n    for (let fila = 0; fila < buscaminas.numFilas; fila++) {\n      for (let columna = 0; columna < buscaminas.numColumnas; columna++) {\n        //solo contamos si es distinto de bomba\n        if (buscaminas.aCampoMinas[fila][columna] != \"B\") {\n          contarMinasAlrededorCasilla(fila, columna);\n        }\n      }\n    }\n  }\n  function marcar(miEvento) {\n    if (miEvento.type === \"contextmenu\") {\n      console.log(miEvento);\n\n      //obtenemos el elemento que ha disparado el evento\n      let casilla = miEvento.currentTarget;\n\n      //detenemos el burbujeo del evento y su accion por defecto\n      miEvento.stopPropagation();\n      miEvento.preventDefault();\n\n      //obtenemos la fila de las propiedades dataset.\n      //como es un string hay que convertirlo a numero\n      let fila = parseInt(casilla.dataset.fila, 10);\n      let columna = parseInt(casilla.dataset.columna, 10);\n      if (fila >= 0 && columna >= 0 && fila < buscaminas.numFilas && columna < buscaminas.numColumnas) {\n        //si esta marcada como \"bandera\"\n        if (casilla.classList.contains(\"icon-bandera\")) {\n          //la quitamos\n          casilla.classList.remove(\"icon-bandera\");\n          //y la marcamos como duda\n          casilla.classList.add(\"icon-duda\");\n          //y al numero de minas encontradas le restamos 1\n          buscaminas.numMinasEncontradas--;\n        } else if (casilla.classList.contains(\"icon-duda\")) {\n          //si estaba marcada como duda lo quitamos\n          casilla.classList.remove(\"icon-duda\");\n        } else if (casilla.classList.length == 0) {\n          //si no está marcada la marcamos como \"bandera\"\n          casilla.classList.add(\"icon-bandera\");\n          //y sumamos 1 al numero de minas encontradas\n          buscaminas.numMinasEncontradas++;\n          //si es igual al numero de minas totales resolvemos el tablero para ver si esta bien\n          if (buscaminas.numMinasEncontradas == buscaminas.numMinasTotales) {\n            resolverTablero(true);\n          }\n        }\n        actualizarcantMnas();\n      }\n    }\n  }\n  function destapar(miEvento) {\n    if (miEvento.type === \"click\") {\n      let casilla = miEvento.currentTarget;\n      let fila = parseInt(casilla.dataset.fila, 10);\n      let columna = parseInt(casilla.dataset.columna, 10);\n      destaparCasilla(fila, columna);\n    }\n  }\n  function destaparCasilla(fila, columna) {\n    //si la casilla esta dentro del tablero\n    if (fila > -1 && fila < buscaminas.numFilas && columna > -1 && columna < buscaminas.numColumnas) {\n      console.log(\"destapamos la casilla con fila \" + fila + \" y columna \" + columna);\n\n      //obtenermos la casilla con la fila y columna\n      let casilla = document.querySelector(\"#f\" + fila + \"_c\" + columna);\n\n      //si la casilla no esta destapada\n      if (!casilla.classList.contains(\"destapado\")) {\n        //si no esta marcada como \"bandera\"\n        if (!casilla.classList.contains(\"icon-bandera\")) {\n          //la destapamos\n          casilla.classList.add(\"destapado\");\n\n          //ponemos en la casilla el número de minas que tiene alrededor\n          casilla.innerHTML = buscaminas.aCampoMinas[fila][columna];\n\n          //ponemos el estilo del numero de minas que tiene alrededor (cada uno es de un color)\n          casilla.classList.add(\"c\" + buscaminas.aCampoMinas[fila][columna]);\n\n          //si no es bomba\n          if (buscaminas.aCampoMinas[fila][columna] !== \"B\") {\n            // y tiene 0 minas alrededor, destapamos las casillas contiguas\n            if (buscaminas.aCampoMinas[fila][columna] == 0) {\n              destaparCasilla(fila - 1, columna - 1);\n              destaparCasilla(fila - 1, columna);\n              destaparCasilla(fila - 1, columna + 1);\n              destaparCasilla(fila, columna - 1);\n              destaparCasilla(fila, columna + 1);\n              destaparCasilla(fila + 1, columna - 1);\n              destaparCasilla(fila + 1, columna);\n              destaparCasilla(fila + 1, columna + 1);\n\n              //y borramos el 0 poniendo la cadena vacía\n              casilla.innerHTML = \"\";\n            }\n          } else if (buscaminas.aCampoMinas[fila][columna] == \"B\") {\n            // si por el contrario hay bomba quitamos la B\n            casilla.innerHTML = \"\";\n\n            //añadimos el estilo de que hay bomba\n            casilla.classList.add(\"icon-bomba\");\n\n            // y que se nos ha olvidado marcarla\n            casilla.classList.add(\"sinmarcar\");\n\n            // y resolvemos el tablero indicando (false), que hemos cometido un fallo\n            resolverTablero(false);\n          }\n        }\n      }\n    }\n  }\n  function resolverTablero(isOK) {\n    let aCasillas = tablero.children;\n    for (let i = 0; i < aCasillas.length; i++) {\n      //quitamos los listeners de los eventos a las casillas\n      aCasillas[i].removeEventListener(\"click\", destapar);\n      aCasillas[i].removeEventListener(\"contextmenu\", marcar);\n      let fila = parseInt(aCasillas[i].dataset.fila, 10);\n      let columna = parseInt(aCasillas[i].dataset.columna, 10);\n      if (aCasillas[i].classList.contains(\"icon-bandera\")) {\n        if (buscaminas.aCampoMinas[fila][columna] == \"B\") {\n          //bandera correcta\n          aCasillas[i].classList.add(\"destapado\");\n          aCasillas[i].classList.remove(\"icon-bandera\");\n          aCasillas[i].classList.add(\"icon-bomba\");\n        } else {\n          //bandera erronea\n          aCasillas[i].classList.add(\"destapado\");\n          aCasillas[i].classList.add(\"banderaErronea\");\n          isOK = false;\n        }\n      } else if (!aCasillas[i].classList.contains(\"destapado\")) {\n        if (buscaminas.aCampoMinas[fila][columna] == \"B\") {\n          //destapamos el resto de las bombas\n          aCasillas[i].classList.add(\"destapado\");\n          aCasillas[i].classList.add(\"icon-bomba\");\n        }\n      }\n    }\n    if (isOK) {\n      alert(\"Ganador!!\");\n    }\n  }\n  function actualizarcantMnas() {\n    document.querySelector(\"#cantMnas\").innerHTML = buscaminas.numMinasTotales - buscaminas.numMinasEncontradas;\n  }\n  useEffect(() => {\n    buscaminas.numFilas = 10;\n    buscaminas.numColumnas = 10;\n    buscaminas.numMinasTotales = 10;\n    pintarTablero();\n    generarCampoMinasVacio();\n    esparcirMinas();\n    contarMinas();\n    actualizarcantMnas();\n  });\n  return /*#__PURE__*/_jsxDEV(BuscaMina, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BuscaMina","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","buscaminas","numMinasTotales","numMinasEncontradas","numFilas","numColumnas","aCampoMinas","pintarTablero","tablero","document","querySelector","console","log","style","setProperty","firstChild","removeEventListener","marcar","destapar","removeChild","f","c","newDiv","createElement","setAttribute","dataset","fila","columna","addEventListener","appendChild","generarCampoMinasVacio","Array","esparcirMinas","numMinasEsparcidas","Math","floor","random","contarMinasAlrededorCasilla","numeroMinasAlrededor","zFila","zColumna","contarMinas","miEvento","type","casilla","currentTarget","stopPropagation","preventDefault","parseInt","classList","contains","remove","add","length","resolverTablero","actualizarcantMnas","destaparCasilla","innerHTML","isOK","aCasillas","children","i","alert","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mgodoy/Desktop/FY/buscamina/src/App.js"],"sourcesContent":["import React from 'react';\nimport './css/stylo.css';\nimport BuscaMina from './components/BuscaMina';\nimport { useRef, useEffect } from \"react\";\n\nfunction App() {\n  const buscaminas = {\n    numMinasTotales: 30,\n    numMinasEncontradas: 0,\n    numFilas: 15,\n    numColumnas: 15,\n    aCampoMinas: []\n  }\n  \n  function pintarTablero(){\n    //seleccionamos el objeto tablero\n    let tablero = document.querySelector(\"#tablero\");\n    console.log(\"tablero :\"+tablero);\n    //actualizamos las variables CSS con las variables JavaScript\n    document.querySelector(\"html\").style.setProperty(\"--num-filas\",buscaminas.numFilas);\n    document.querySelector(\"html\").style.setProperty(\"--num-columnas\",buscaminas.numColumnas);\n  \n    //borramos el tablero actual\n    while (tablero.firstChild) {\n        tablero.firstChild.removeEventListener(\"contextmenu\",marcar);\n        tablero.firstChild.removeEventListener(\"click\",destapar);\n        tablero.removeChild(tablero.firstChild);\n    }\n  \n    //creamos las casillas que necesitemos\n    for(let f=0; f<buscaminas.numFilas; f++){\n        for(let c=0; c<buscaminas.numColumnas; c++){\n            let newDiv = document.createElement(\"div\");\n            newDiv.setAttribute(\"id\",\"f\" + f + \"_c\" + c );\n            newDiv.dataset.fila = f;\n            newDiv.dataset.columna = c;\n            newDiv.addEventListener(\"contextmenu\",marcar); //evento con el botón derecho del raton\n            newDiv.addEventListener(\"click\",destapar); //evento con el botón izquierdo del raton\n  \n            tablero.appendChild(newDiv);\n        }\n    }\n  }\n  \n  function generarCampoMinasVacio(){\n    //generamos el campo de minas\n    buscaminas.aCampoMinas = new Array(buscaminas.numFilas);\n    for (let fila=0; fila<buscaminas.numFilas; fila++){\n        buscaminas.aCampoMinas[fila] = new Array(buscaminas.numColumnas);\n    }\n  }\n  \n  function esparcirMinas(){\n    //repartimos de forma aleatoria las minas\n    let numMinasEsparcidas = 0;\n  \n    while (numMinasEsparcidas<buscaminas.numMinasTotales){\n        //numero aleatorio en el intervalo [0,numFilas-1]\n        let fila    = Math.floor(Math.random() * buscaminas.numFilas);\n  \n        //numero aleatorio en el intervalo [0,numColumnas-1]\n        let columna = Math.floor(Math.random() * buscaminas.numColumnas);\n  \n        //si no hay bomba en esa posicion\n        if (buscaminas.aCampoMinas[fila][columna] != \"B\"){\n            //la ponemos\n            buscaminas.aCampoMinas[fila][columna] = \"B\";\n  \n            //y sumamos 1 a las bombas esparcidas\n            numMinasEsparcidas++;\n        }\n    }\n  }\n  \n  \n  function contarMinasAlrededorCasilla(fila,columna){\n    let numeroMinasAlrededor = 0;\n  \n    //de la fila anterior a la posterior\n    for (let zFila = fila-1; zFila <= fila+1; zFila++){\n  \n        //de la columna anterior a la posterior\n        for (let zColumna = columna-1; zColumna <= columna+1; zColumna++){\n  \n            //si la casilla cae dentro del tablero\n            if (zFila>-1 && zFila<buscaminas.numFilas && zColumna>-1 && zColumna<buscaminas.numColumnas){\n  \n                //miramos si en esa posición hay bomba\n                if (buscaminas.aCampoMinas[zFila][zColumna]==\"B\"){\n  \n                    //y sumamos 1 al numero de minas que hay alrededor de esa casilla\n                    numeroMinasAlrededor++;\n                }\n            }\n        }\n    }\n  \n    //y guardamos cuantas minas hay en esa posicion\n    buscaminas.aCampoMinas[fila][columna] = numeroMinasAlrededor;\n  }\n  \n  \n  \n  function contarMinas(){\n    //contamos cuantas minas hay alrededor de cada casilla\n    for (let fila=0; fila<buscaminas.numFilas; fila++){\n        for (let columna=0; columna<buscaminas.numColumnas; columna++){\n            //solo contamos si es distinto de bomba\n            if (buscaminas.aCampoMinas[fila][columna]!=\"B\"){\n                contarMinasAlrededorCasilla(fila,columna);\n            }\n        }\n    }\n  }\n  \n  \n  \n  function marcar(miEvento){\n    if (miEvento.type === \"contextmenu\"){\n        console.log(miEvento);\n  \n        //obtenemos el elemento que ha disparado el evento\n        let casilla = miEvento.currentTarget;\n  \n        //detenemos el burbujeo del evento y su accion por defecto\n        miEvento.stopPropagation();\n        miEvento.preventDefault();\n  \n        //obtenemos la fila de las propiedades dataset.\n        //como es un string hay que convertirlo a numero\n        let fila = parseInt(casilla.dataset.fila,10);\n        let columna = parseInt(casilla.dataset.columna,10);\n  \n        if (fila>=0 && columna>=0 && fila< buscaminas.numFilas && columna < buscaminas.numColumnas) {\n            //si esta marcada como \"bandera\"\n            if (casilla.classList.contains(\"icon-bandera\")){\n                //la quitamos\n                casilla.classList.remove(\"icon-bandera\");\n                //y la marcamos como duda\n                casilla.classList.add(\"icon-duda\");\n                //y al numero de minas encontradas le restamos 1\n                buscaminas.numMinasEncontradas--;\n            } else if (casilla.classList.contains(\"icon-duda\")){\n                //si estaba marcada como duda lo quitamos\n                casilla.classList.remove(\"icon-duda\");\n            } else if (casilla.classList.length == 0){\n                //si no está marcada la marcamos como \"bandera\"\n                casilla.classList.add(\"icon-bandera\");\n                //y sumamos 1 al numero de minas encontradas\n                buscaminas.numMinasEncontradas++;\n                //si es igual al numero de minas totales resolvemos el tablero para ver si esta bien\n                if (buscaminas.numMinasEncontradas == buscaminas.numMinasTotales){\n                    resolverTablero(true);\n                }\n            }\n  \n            actualizarcantMnas();\n        }\n  \n    }\n  }\n  \n  function destapar(miEvento){\n    if (miEvento.type === \"click\"){\n        let casilla = miEvento.currentTarget;\n        let fila = parseInt(casilla.dataset.fila,10);\n        let columna = parseInt(casilla.dataset.columna,10);\n  \n        destaparCasilla(fila,columna);\n    }\n  }\n  \n  function destaparCasilla(fila, columna){\n  \n    //si la casilla esta dentro del tablero\n    if (fila > -1 && fila < buscaminas.numFilas &&\n        columna >-1 && columna < buscaminas.numColumnas){\n  \n        console.log(\"destapamos la casilla con fila \" + fila + \" y columna \" +columna );\n  \n        //obtenermos la casilla con la fila y columna\n        let casilla = document.querySelector(\"#f\" + fila + \"_c\" + columna);\n  \n        //si la casilla no esta destapada\n        if (!casilla.classList.contains(\"destapado\")){\n  \n            //si no esta marcada como \"bandera\"\n            if (!casilla.classList.contains(\"icon-bandera\")){\n  \n                //la destapamos\n                casilla.classList.add(\"destapado\");\n  \n                //ponemos en la casilla el número de minas que tiene alrededor\n                casilla.innerHTML = buscaminas.aCampoMinas[fila][columna];\n  \n                //ponemos el estilo del numero de minas que tiene alrededor (cada uno es de un color)\n                casilla.classList.add(\"c\" + buscaminas.aCampoMinas[fila][columna])\n  \n                //si no es bomba\n                if (buscaminas.aCampoMinas[fila][columna] !==\"B\"){\n  \n                    // y tiene 0 minas alrededor, destapamos las casillas contiguas\n                    if (buscaminas.aCampoMinas[fila][columna] == 0){\n                        destaparCasilla(fila-1,columna-1);\n                        destaparCasilla(fila-1,columna);\n                        destaparCasilla(fila-1,columna+1);\n                        destaparCasilla(fila,columna-1);\n                        destaparCasilla(fila,columna+1);\n                        destaparCasilla(fila+1,columna-1);\n                        destaparCasilla(fila+1,columna);\n                        destaparCasilla(fila+1,columna+1);\n  \n                        //y borramos el 0 poniendo la cadena vacía\n                        casilla.innerHTML  = \"\";\n                    }\n                }else if (buscaminas.aCampoMinas[fila][columna]==\"B\"){\n                    // si por el contrario hay bomba quitamos la B\n                    casilla.innerHTML = \"\";\n  \n                    //añadimos el estilo de que hay bomba\n                    casilla.classList.add(\"icon-bomba\");\n  \n                    // y que se nos ha olvidado marcarla\n                    casilla.classList.add(\"sinmarcar\");\n  \n                    // y resolvemos el tablero indicando (false), que hemos cometido un fallo\n                    resolverTablero(false);\n                }\n            }\n        }\n    }\n  }\n  \n  function resolverTablero(isOK){\n    let aCasillas = tablero.children;\n    for (let i = 0 ; i < aCasillas.length; i++){\n        //quitamos los listeners de los eventos a las casillas\n        aCasillas[i].removeEventListener(\"click\", destapar);\n        aCasillas[i].removeEventListener(\"contextmenu\", marcar);\n  \n        let fila = parseInt(aCasillas[i].dataset.fila,10);\n        let columna = parseInt(aCasillas[i].dataset.columna,10);\n  \n        if (aCasillas[i].classList.contains(\"icon-bandera\")){\n            if (buscaminas.aCampoMinas[fila][columna] == \"B\"){\n                //bandera correcta\n                aCasillas[i].classList.add(\"destapado\");\n                aCasillas[i].classList.remove(\"icon-bandera\");\n                aCasillas[i].classList.add(\"icon-bomba\");\n            } else {\n                //bandera erronea\n                aCasillas[i].classList.add(\"destapado\");\n                aCasillas[i].classList.add(\"banderaErronea\");\n                isOK = false;\n            }\n        } else if (!aCasillas[i].classList.contains(\"destapado\")){\n            if (buscaminas.aCampoMinas[fila][columna] == \"B\"){\n                //destapamos el resto de las bombas\n                aCasillas[i].classList.add(\"destapado\");\n                aCasillas[i].classList.add(\"icon-bomba\");\n            }\n        }\n  \n    }\n  \n    if (isOK){\n        alert(\"Ganador!!\");\n    }\n  }\n  \n  \n  function actualizarcantMnas(){\n    document.querySelector(\"#cantMnas\").innerHTML =\n        (buscaminas.numMinasTotales - buscaminas.numMinasEncontradas);\n  }\n  useEffect(() => {\n    buscaminas.numFilas = 10;\n    buscaminas.numColumnas = 10;\n    buscaminas.numMinasTotales = 10;\n    pintarTablero();\n    generarCampoMinasVacio();\n    esparcirMinas();\n    contarMinas();\n    actualizarcantMnas();\n  }); \n\n  return (\n    <BuscaMina />\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}